<?xml version="1.0"?>
<doc>
    <assembly>
        <name>PerfilRenovaWeb.api</name>
    </assembly>
    <members>
        <member name="M:PerfilWeb.Api.Controllers.AuthController.SeedInitialUser">
             <summary>
             Cria usuário inicial do sistema (ENDPOINT TEMPORÁRIO)
             </summary>
             <remarks>
             Este endpoint deve ser usado apenas uma vez para criar o primeiro usuário administrador.
            
             **ATENÇÃO:** Remova este endpoint após criar o primeiro usuário por questões de segurança.
            
             **Credenciais padrão:**
             - Username: admin
             - Password: adm123
            
             **IMPORTANTE:** Troque a senha imediatamente após o primeiro login!
             </remarks>
             <response code="200">Usuário inicial criado com sucesso</response>
             <response code="400">Já existem usuários cadastrados no sistema</response>
        </member>
        <member name="M:PerfilWeb.Api.Controllers.AuthController.Login(PerfilWeb.Api.DTOs.LoginRequestDto)">
             <summary>
             Autentica um usuário e retorna um token JWT
             </summary>
             <remarks>
             Realiza a autenticação do usuário verificando as credenciais fornecidas.
            
             **Exemplo de requisição:**
             ```json
             {
               "username": "admin",
               "password": "sua_senha_segura"
             }
             ```
            
             **Resposta de sucesso:**
             ```json
             {
               "token": "eyJhbGciOiJIUzI1NiIs...",
               "username": "admin",
               "role": "Admin",
               "expiresAt": "2025-01-15T14:30:00Z"
             }
             ```
            
             O token retornado deve ser incluído no header Authorization das próximas requisições:
             ```
             Authorization: Bearer {token}
             ```
             </remarks>
             <param name="request">Credenciais de login (username e password)</param>
             <response code="200">Login realizado com sucesso, retorna o token JWT</response>
             <response code="401">Credenciais inválidas ou usuário inativo</response>
        </member>
        <member name="M:PerfilWeb.Api.Controllers.ClientesController.GetClientes(System.String,System.String,System.Int32,System.Int32)">
             <summary>
             Lista todos os clientes com paginação e filtros
             </summary>
             <remarks>
             Retorna uma lista paginada de clientes com opções de busca e filtro por status.
            
             **Filtros de status disponíveis:**
             - `ativos`: Clientes não bloqueados com assinatura válida
             - `bloqueado`: Clientes bloqueados
             - `vencidos`: Clientes com assinatura vencida (não bloqueados)
             - `próximos a vencer`: Clientes com assinatura válida nos próximos 15 dias
            
             **Exemplo de uso:**
             ```
             GET /api/clientes?search=12345&amp;status=ativos&amp;page=1&amp;pageSize=10
             ```
             </remarks>
             <param name="search">Termo de busca (CNPJ/CPF ou descrição)</param>
             <param name="status">Filtro de status (ativos, bloqueado, vencidos, pendentes, próximos a vencer)</param>
             <param name="page">Número da página (padrão: 1)</param>
             <param name="pageSize">Tamanho da página (padrão: 10)</param>
             <response code="200">Lista de clientes retornada com sucesso</response>
             <response code="401">Não autenticado - token ausente ou inválido</response>
        </member>
        <member name="M:PerfilWeb.Api.Controllers.ClientesController.UpdateClient(System.Int32,PerfilRenovaWeb.api.Dtos.UpdatesClientesRequestDTO)">
             <summary>
             Atualiza informações de um cliente específico
             </summary>
             <remarks>
             Permite atualizar status de bloqueio, data de validade e pendências do cliente.
            
             **Exemplo de requisição:**
             ```json
             {
               "bloqueado": "S",
               "dataValidade": "2025-12-31",
               "pendente": false
             }
             ```
             </remarks>
             <param name="id">ID do cliente</param>
             <param name="request">Dados para atualização</param>
             <response code="200">Cliente atualizado com sucesso</response>
             <response code="400">Dados inválidos fornecidos</response>
             <response code="404">Cliente não encontrado</response>
             <response code="401">Não autenticado</response>
        </member>
        <member name="M:PerfilWeb.Api.Controllers.ClientesController.BulkUpdateClientes(PerfilRenovaWeb.api.Dtos.BulkUpdateRequestDto)">
             <summary>
             Atualiza múltiplos clientes em lote
             </summary>
             <remarks>
             Permite atualizar vários clientes de uma só vez. Retorna a lista de clientes atualizados e possíveis erros.
            
             **Exemplo de requisição:**
             ```json
             {
               "clientIds": [1, 2, 3],
               "bloqueado": "N",
               "dataValidade": "2025-12-31",
               "pendente": false
             }
             ```
             </remarks>
             <param name="request">Lista de IDs e dados para atualização</param>
             <response code="200">Atualização em lote concluída (com ou sem erros)</response>
             <response code="400">Nenhum cliente fornecido</response>
             <response code="401">Não autenticado</response>
        </member>
        <member name="M:PerfilWeb.Api.Controllers.ClientesController.BlockClient(System.Int32,System.String)">
             <summary>
             Bloqueia um cliente específico
             </summary>
             <remarks>
             Bloqueia o acesso do cliente ao sistema com uma mensagem específica baseada no motivo.
            
             **Motivos de bloqueio:**
             - `expired`: Assinatura expirada
             - `payment`: Pagamento pendente
             - Outros valores: Bloqueado manualmente
            
             **Exemplo:**
             ```
             POST /api/clientes/123/block?reason=payment
             ```
             </remarks>
             <param name="id">ID do cliente a ser bloqueado</param>
             <param name="reason">Motivo do bloqueio (expired, payment ou outro)</param>
             <response code="200">Cliente bloqueado com sucesso</response>
             <response code="404">Cliente não encontrado</response>
             <response code="401">Não autenticado</response>
        </member>
        <member name="M:PerfilWeb.Api.Controllers.ClientesController.RenewSubscription(System.Int32,PerfilRenovaWeb.api.Dtos.UpdatesClientesRequestDTO)">
             <summary>
             Renova a assinatura de um cliente
             </summary>
             <remarks>
             Renova a assinatura do cliente atualizando a data de validade e desbloqueando caso esteja bloqueado.
            
             **Exemplo de requisição:**
             ```json
             {
               "dataValidade": "2026-01-15"
             }
             ```
             </remarks>
             <param name="id">ID do cliente</param>
             <param name="request">Nova data de validade</param>
             <response code="200">Assinatura renovada com sucesso</response>
             <response code="400">Data inválida ou não fornecida</response>
             <response code="404">Cliente não encontrado</response>
             <response code="401">Não autenticado</response>
        </member>
        <member name="M:PerfilWeb.Api.Controllers.ClientesController.UnblockClient(System.Int32)">
             <summary>
             Desbloqueia um cliente
             </summary>
             <remarks>
             Remove o bloqueio de um cliente, permitindo acesso ao sistema.
            
             **Validações:**
             - Cliente não pode estar com assinatura vencida
             - Cliente deve estar atualmente bloqueado
             </remarks>
             <param name="id">ID do cliente a ser desbloqueado</param>
             <response code="200">Cliente desbloqueado com sucesso</response>
             <response code="400">Não é possível desbloquear (ex: assinatura vencida)</response>
             <response code="404">Cliente não encontrado</response>
             <response code="401">Não autenticado</response>
        </member>
        <member name="T:PerfilWeb.Api.DTOs.LoginRequestDto">
            <summary>
            DTO para requisição de login
            </summary>
        </member>
        <member name="T:PerfilWeb.Api.DTOs.LoginResponseDto">
            <summary>
            DTO para resposta de login bem-sucedido
            </summary>
        </member>
        <member name="T:PerfilWeb.Api.DTOs.AuthErrorResponseDto">
            <summary>
            DTO para resposta de erro de autenticação
            </summary>
        </member>
        <member name="M:PerfilWeb.Api.Models.Usuario.VerifyPassword(System.String)">
            <summary>
            Verifica se a senha está correta
            </summary>
        </member>
        <member name="M:PerfilWeb.Api.Models.Usuario.HashPassword(System.String)">
            <summary>
            Cria hash seguro da senha
            </summary>
        </member>
        <member name="M:PerfilWeb.Api.Models.Usuario.UpdateLastLogin">
            <summary>
            Atualiza o último login
            </summary>
        </member>
        <member name="T:PerfilRenovaWeb.api.Dtos.UpdatesClientesRequestDTO">
            <summary>
            DTO para requisição de atualização compativel 
            </summary>
        </member>
        <member name="T:PerfilRenovaWeb.api.Dtos.GetCLientesResponseDTO">
            <summary>
             DTO para resposta da lista de paginação
             </summary>
        </member>
        <member name="T:PerfilRenovaWeb.api.Dtos.ClientFilterDto">
            <summary>
             DTO para parâmetros de filtro e buscas
            </summary>
        </member>
        <member name="T:PerfilRenovaWeb.api.Dtos.PaginatedClientsResponseDto">
            <summary>
             DTO para resposta paginada de clientes
            </summary>
        </member>
        <member name="T:PerfilRenovaWeb.api.Dtos.BulkUpdateRequestDto">
            <summary>
             DTO para requisição de atualização em lote
            </summary>
        </member>
        <member name="T:PerfilRenovaWeb.api.Dtos.BulkUpdateResponseDto">
            <summary>
             DTO para resposta de atualização em lote
            </summary>
        </member>
        <member name="T:PerfilRenovaWeb.api.Dtos.ErrorResponseDto">
            <summary>
             DTO genérico de mensagem de erro
             </summary>
        </member>
    </members>
</doc>
